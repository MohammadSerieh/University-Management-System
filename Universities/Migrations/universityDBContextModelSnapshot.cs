// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Universities.models;

#nullable disable

namespace Universities.Migrations
{
    [DbContext(typeof(universityDBContext))]
    partial class universityDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Universities.Entities.CommonZakat_MinorLookUpTable", b =>
                {
                    b.Property<int>("minorid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("minorid"));

                    b.Property<string>("descs")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("majorid")
                        .HasColumnType("int");

                    b.HasKey("minorid");

                    b.ToTable("CommonZakat_MinorLookUpTable", (string)null);
                });

            modelBuilder.Entity("Universities.Entities.UniAppCoursesReserve", b =>
                {
                    b.Property<int>("UniAppCoursesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UniAppCoursesID"));

                    b.Property<decimal>("Appno")
                        .HasColumnType("numeric(10,0)");

                    b.Property<byte[]>("CourseAtt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("CourseCenterID")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CourseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<string>("CourseLocation")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DocumentName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MimeType")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long?>("Size")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UploadDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UniAppCoursesID");

                    b.HasIndex("Appno");

                    b.HasIndex("CourseID");

                    b.ToTable("UniAppCoursesReserve", (string)null);
                });

            modelBuilder.Entity("Universities.Entities.UniversityApplicationReserve", b =>
                {
                    b.Property<decimal>("Appno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(10,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Appno"));

                    b.Property<bool>("ApplicationCategory")
                        .HasColumnType("bit");

                    b.Property<string>("ApplicationID")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<decimal?>("CommulativeRate")
                        .HasPrecision(5, 2)
                        .HasColumnType("numeric(5, 2)");

                    b.Property<decimal?>("HighSchoolGrade")
                        .HasPrecision(5, 2)
                        .HasColumnType("numeric(5, 2)");

                    b.Property<DateTime>("HighSchoolGraduate")
                        .HasColumnType("DateTime");

                    b.Property<decimal?>("SemesterRate")
                        .HasPrecision(5, 2)
                        .HasColumnType("numeric(5, 2)");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("StudentNameEn")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("UniCollege")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UniGrantDate")
                        .HasColumnType("DateTime");

                    b.Property<string>("UniGrantID")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("UniGrantRateLimit")
                        .HasPrecision(5, 2)
                        .HasColumnType("numeric(5, 2)");

                    b.Property<int?>("UniID")
                        .HasColumnType("int");

                    b.Property<int?>("UniMajor")
                        .HasColumnType("int");

                    b.Property<string>("UniNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("nationalityCategory")
                        .HasColumnType("int");

                    b.HasKey("Appno");

                    b.HasIndex("UniCollege");

                    b.HasIndex("UniID");

                    b.HasIndex("UniMajor");

                    b.HasIndex("nationalityCategory");

                    b.ToTable("UniversityApplicationReserve", (string)null);
                });

            modelBuilder.Entity("Universities.Entities.UniAppCoursesReserve", b =>
                {
                    b.HasOne("Universities.Entities.UniversityApplicationReserve", "UniversityApplicationReserve_Appno_nav")
                        .WithMany("UniAppCoursesReserve_Appno_nav")
                        .HasForeignKey("Appno")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Universities.Entities.CommonZakat_MinorLookUpTable", "CommonZakat_MinorLookUpTable_CourseID_nav")
                        .WithMany("UniAppCoursesReserve_CourseID_nav")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CommonZakat_MinorLookUpTable_CourseID_nav");

                    b.Navigation("UniversityApplicationReserve_Appno_nav");
                });

            modelBuilder.Entity("Universities.Entities.UniversityApplicationReserve", b =>
                {
                    b.HasOne("Universities.Entities.CommonZakat_MinorLookUpTable", "CommonZakat_MinorLookUpTable_UniCollege_nav")
                        .WithMany("UniversityApplicationReserve_UniCollege_nav")
                        .HasForeignKey("UniCollege")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Universities.Entities.CommonZakat_MinorLookUpTable", "CommonZakat_MinorLookUpTable_UniID_nav")
                        .WithMany("UniversityApplicationReserve_UniID_nav")
                        .HasForeignKey("UniID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Universities.Entities.CommonZakat_MinorLookUpTable", "CommonZakat_MinorLookUpTable_UniMajor_nav")
                        .WithMany("UniversityApplicationReserve_UniMajor_nav")
                        .HasForeignKey("UniMajor")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Universities.Entities.CommonZakat_MinorLookUpTable", "CommonZakat_MinorLookUpTable_nationalCategory_nav")
                        .WithMany("UniversityApplicationReserve_nationalCategory_nav")
                        .HasForeignKey("nationalityCategory")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CommonZakat_MinorLookUpTable_UniCollege_nav");

                    b.Navigation("CommonZakat_MinorLookUpTable_UniID_nav");

                    b.Navigation("CommonZakat_MinorLookUpTable_UniMajor_nav");

                    b.Navigation("CommonZakat_MinorLookUpTable_nationalCategory_nav");
                });

            modelBuilder.Entity("Universities.Entities.CommonZakat_MinorLookUpTable", b =>
                {
                    b.Navigation("UniAppCoursesReserve_CourseID_nav");

                    b.Navigation("UniversityApplicationReserve_UniCollege_nav");

                    b.Navigation("UniversityApplicationReserve_UniID_nav");

                    b.Navigation("UniversityApplicationReserve_UniMajor_nav");

                    b.Navigation("UniversityApplicationReserve_nationalCategory_nav");
                });

            modelBuilder.Entity("Universities.Entities.UniversityApplicationReserve", b =>
                {
                    b.Navigation("UniAppCoursesReserve_Appno_nav");
                });
#pragma warning restore 612, 618
        }
    }
}
